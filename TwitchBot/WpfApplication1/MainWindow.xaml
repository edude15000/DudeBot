<Controls:MetroWindow x:Class="WpfApplication1.MainWindow"
        Loaded="loaded"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApplication1" 
        VerticalContentAlignment="Stretch"
        VerticalAlignment="Stretch"
        mc:Ignorable="d"
        Closing="Window_Closing"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      Title="DUDEBOT" Height="400" Width="950"
                      ShowIconOnTitleBar="True"
        MinHeight="400" MinWidth="950">
    
    <Window.Resources>
        <local:ListToStringConverter x:Key="ListToStringConverter"/>
        <local:ListConverter x:Key="ListConverter"/>
    </Window.Resources>

    <Controls:MetroWindow.Flyouts>
        <Controls:FlyoutsControl>
            <Controls:Flyout x:Name="supportflyout" Header="Flyout" Position="Right" Width="400">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="5*"/>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="15*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50*"/>
                        <ColumnDefinition Width="50*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock x:Name="tb_a" Text="Help me pay my student loans:" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" FontSize="16" HorizontalAlignment="Center" />
                    <Button x:Name="b_a" Style="{DynamicResource SquareButtonStyle}" Click="donateviapaypal" Content="Donate via PayPal" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="1" FontSize="16" HorizontalAlignment="Center" />

                    <TextBlock x:Name="tb_b" Text="Support my band 'Night Like This':" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="3" FontSize="16" HorizontalAlignment="Center" />
                    <Button x:Name="b_b" Style="{DynamicResource SquareButtonStyle}" Click="nightlikethis" Content="Facebook" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="4" FontSize="16" HorizontalAlignment="Center" />
                    <Button x:Name="b_c" Style="{DynamicResource SquareButtonStyle}" Click="nightlikethistwitter" Content="Twitter" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="5" FontSize="16" HorizontalAlignment="Center" />
                    <Button x:Name="b_d" Style="{DynamicResource SquareButtonStyle}" Click="nightlikethisitunes" Content="iTunes" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="6" FontSize="16" HorizontalAlignment="Center" />
                    <Button x:Name="b_e" Style="{DynamicResource SquareButtonStyle}" Click="nightlikethisgooglemusic" Content="Google Music" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="7" FontSize="16" HorizontalAlignment="Center" />
                    <Button x:Name="b_f" Style="{DynamicResource SquareButtonStyle}" Click="nightlikethisspotify" Content="Spotify" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="8" FontSize="16" HorizontalAlignment="Center" />

                </Grid>
            </Controls:Flyout>
        </Controls:FlyoutsControl>
    </Controls:MetroWindow.Flyouts>

    <Controls:MetroWindow.RightWindowCommands>
        <Controls:WindowCommands>
            <Button x:Name="websitebutton" Content="Website" Click="websitebutton_Click" />
            <Button x:Name="discordbutton" Content="Discord" Click="discordbutton_Click" />
            <Button x:Name="flyoutbutton" Content="Help Support Me" Click="flyout" />
        </Controls:WindowCommands>
    </Controls:MetroWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="3"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <TabControl x:Name="tabholder" TabStripPlacement="Left" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="LightBlue" Grid.Row="1" >
            <TabControl.Template>
                <ControlTemplate TargetType="TabControl">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="175"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Visible">
                            <TabPanel x:Name="HeaderPanel"
                              Panel.ZIndex ="1" 
                              KeyboardNavigation.TabIndex="1"
                              Grid.Column="1"
                              Grid.Row="1"
                              IsItemsHost="true"/>
                        </ScrollViewer>
                        <ContentPresenter x:Name="PART_SelectedContentHost"
                                          ContentSource="SelectedContent" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                    </Grid>
                </ControlTemplate>
            </TabControl.Template>
            <TabItem Header="Dashboard" x:Name="dashboard" FontSize="12">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20*"/>
                        <ColumnDefinition Width="20*"/>
                        <ColumnDefinition Width="20*"/>
                        <ColumnDefinition Width="20*"/>
                        <ColumnDefinition Width="20*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="90*"/>
                        <RowDefinition Height="10*"/>
                    </Grid.RowDefinitions>
                    <WebBrowser x:Name="browser" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4" />

                    <Border BorderThickness="1" BorderBrush="Black" Grid.Column="4">
                        <TextBox IsReadOnly="True" TextChanged="eventlog_TextChanged" VerticalScrollBarVisibility="Auto" x:Name="eventlog" Grid.Column="4" TextWrapping="Wrap" Text="{Binding eventlog, UpdateSourceTrigger=PropertyChanged}"/>
                    </Border>

                    <Viewbox Stretch="Uniform" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    <Button Style="{DynamicResource SquareButtonStyle}" x:Name="open" Content="Connect Bot"  Click="openBot" Grid.Column="0" Grid.Row="1" Background="#FF47C10D" />
                    <Button Style="{DynamicResource SquareButtonStyle}" x:Name="kill" Content="Disconnect Bot" Click="killBot" Grid.Column="1" Grid.Row="1" Background="#FFFF2323" />
                    <Button Style="{DynamicResource SquareButtonStyle}" x:Name="openImages" Content="Open Images Window" Click="openImageWindow" Grid.Column="2" Grid.Row="1" />
                    <Button Style="{DynamicResource SquareButtonStyle}" x:Name="updateDudebot" Content="Check For Update" Click="updatebot" Grid.Column="3" Grid.Row="1" />
                    <Button Style="{DynamicResource SquareButtonStyle}" x:Name="resetDudebot" Content="Reset DudeBot" Click="resetbot" Grid.Column="5" Grid.Row="1"  />

                </Grid>
            </TabItem>

            <TabItem x:Name="customization" Header="Customize" FontSize="12">
                <TabControl x:Name="customizationtabholder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="LightBlue">
                    <TabControl.Template>
                        <ControlTemplate TargetType="TabControl">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="39"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TabPanel x:Name="HeaderPanel"
                              Panel.ZIndex ="1" 
                              KeyboardNavigation.TabIndex="1"
                              Grid.Column="0"
                              Grid.Row="0"
                              IsItemsHost="true"/>
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                          ContentSource="SelectedContent" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                            </Grid>
                        </ControlTemplate>
                    </TabControl.Template>

                    <TabItem Header="Stream" FontSize="12">
                        <Border Padding="10 0 10 0">
                            <StackPanel>
                                <TextBlock FontSize="14" Text="Streamer Name" />
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Type streamer name here" x:Name="streamerName" FontSize="14" TextWrapping="Wrap" Text="{Binding streamer, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock Padding="0 10 0 0" FontSize="14" Text="Bot Name" />
                                <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Type bot name here" x:Name="botName" FontSize="14" Text="{Binding botName, UpdateSourceTrigger=PropertyChanged}" />

                                <TextBlock Padding="0 10 0 0" FontSize="14" Text=" Oauth Token" />
                                <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Type bot oauth token here" x:Name="oauth" FontSize="14" Text="{Binding oauth, UpdateSourceTrigger=PropertyChanged}"  />

                                <Button Margin="0 10 0 0" FontSize="12" Style="{DynamicResource SquareButtonStyle}" x:Name="GO1" Content="Apply" Click="writeToConfig" />

                            </StackPanel>
                        </Border>
                    </TabItem>

                    <TabItem Header="Request" FontSize="12">
                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" >
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="35*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock  VerticalAlignment="Center" FontSize="14" Grid.Row="3" Text="Banned keywords: " Grid.Column="2" HorizontalAlignment="Right" />
                                <TextBox TextWrapping="Wrap"  Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Type banned request keywords list here &#x0a;(example: fire and flames, tool)" x:Name="bannedKeywords" FontSize="12" Grid.Row="3" Grid.Column="3" Grid.RowSpan="3" VerticalScrollBarVisibility="Auto" Text="{Binding Path=requestSystem.bannedKeywords, Converter={StaticResource ListToStringConverter}}" />


                                <TextBox TextWrapping="Wrap"  Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Type Google sheet id here" x:Name="googleSheetID" FontSize="14" Grid.Row="0" Grid.Column="3" Grid.RowSpan="2" Text="{Binding spreadsheetId, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock VerticalAlignment="Center" FontSize="14" Grid.Row="0" Text="Google Sheet ID: " Grid.Column="2" HorizontalAlignment="Right"/>
                                
                                <TextBlock VerticalAlignment="Center" FontSize="14" Grid.Row="0" Grid.Column="0" Text="# songs list displays: " HorizontalAlignment="Right"/>
                                <Controls:NumericUpDown x:Name="numberSongsSongListDisplays" Minimum = "1" Maximum = "10" Interval = "1" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Left" Value="{Binding requestSystem.numOfSongsToDisplay, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock VerticalAlignment="Center" FontSize="14" Grid.Column="0" Grid.Row="1" Text="Max # songs per user: "  HorizontalAlignment="Right"/>
                                <Controls:NumericUpDown x:Name="maxNumberSongsPerUser" Minimum = "1" Maximum = "100" Interval = "1" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Value="{Binding requestSystem.numOfSongsInQueuePerUser, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock VerticalAlignment="Center" FontSize="14" Text="Max song list length: " Grid.Column="0" Grid.Row="2" HorizontalAlignment="Right" />
                                <Controls:NumericUpDown x:Name="maxSongListLength" Minimum = "1" Maximum = "100" Interval = "1" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" Value="{Binding requestSystem.maxSonglistLength, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock  VerticalAlignment="Center" FontSize="14" Text="Requests on: " Grid.Column="0" Grid.Row="3" HorizontalAlignment="Right" />
                                <CheckBox x:Name="requestOnCheckbox" FontSize="14" Grid.Column="1" Grid.Row="3" IsChecked="{Binding requestSystem.requestsTrigger, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                                <TextBlock  VerticalAlignment="Center" FontSize="14" Text="Must follow to request: " Grid.Column="0" Grid.Row="4" HorizontalAlignment="Right"/>
                                <CheckBox x:Name="followToRequestCheckbox"  FontSize="14" Grid.Column="1" Grid.Row="4" IsChecked="{Binding requestSystem.mustFollowToRequest, UpdateSourceTrigger=PropertyChanged}"/>
                                <CheckBox x:Name="songlistOneLineCheckbox"  FontSize="14" Grid.Column="1" Grid.Row="5" IsChecked="{Binding requestSystem.displayOneLine, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock  VerticalAlignment="Center" FontSize="14" Text="Display queue in one line: " Grid.Column="0" Grid.Row="5" HorizontalAlignment="Right" />
                                <TextBlock  VerticalAlignment="Center" FontSize="14" Text="Display if user is here: " Grid.Column="0" Grid.Row="6" HorizontalAlignment="Right"/>
                                <CheckBox x:Name="displayIfUserIsHereCheckbox" FontSize="14" Grid.Column="1" Grid.Row="6" IsChecked="{Binding requestSystem.displayIfUserIsHere, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock  VerticalAlignment="Center" FontSize="14" Grid.Column="0" Grid.Row="7" Text="Whispers to requester: " HorizontalAlignment="Right"/>
                                <CheckBox x:Name="whisperCheckbox" FontSize="14" Grid.Column="1" Grid.Row="7" IsChecked="{Binding requestSystem.whisperToUser, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock VerticalAlignment="Center" FontSize="14" Text="Direct Input Requests: " Grid.Column="0" Grid.Row="8" HorizontalAlignment="Right" />
                                <TextBlock VerticalAlignment="Center" FontSize="14" Text="Youtube Link Requests: " Grid.Column="0" Grid.Row="9"  HorizontalAlignment="Right"/>
                                <CheckBox x:Name="direquests"  FontSize="14" Grid.Column="1" Grid.Row="8" IsChecked="{Binding requestSystem.direquests, UpdateSourceTrigger=PropertyChanged}" />
                                <CheckBox x:Name="ylrequests"  FontSize="14" Grid.Column="1" Grid.Row="9" IsChecked="{Binding requestSystem.ylrequests, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock VerticalAlignment="Center" FontSize="14" Text="Song Duration Limit: " Grid.Column="0" Grid.Row="10" HorizontalAlignment="Right" />
                                <CheckBox x:Name="songduration" FontSize="14" Checked="songduration_changed" Unchecked="songduration_changed" Grid.Column="1" Grid.Row="10" IsChecked="{Binding requestSystem.maxSongLength, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock VerticalAlignment="Center" FontSize="14" Text="Limit (minutes): " Grid.Row="11" Grid.Column="0" HorizontalAlignment="Right"/>
                                <Controls:NumericUpDown x:Name="songdurationlimit" Minimum = "1" Maximum = "59" Interval = "1" Grid.Column="1" Grid.Row="11" HorizontalAlignment="Left" Value="{Binding requestSystem.maxSongLengthInMinutes, UpdateSourceTrigger=PropertyChanged}" />

                                <TextBlock VerticalAlignment="Center" FontSize="14" Text="Default song duration: " Grid.Row="12" Grid.Column="0" HorizontalAlignment="Right"/>
                                <Controls:NumericUpDown x:Name="defaultMinsSong" Minimum = "1" Maximum = "10" Interval = "1" Grid.Column="1" Grid.Row="12" HorizontalAlignment="Left" Value="{Binding requestSystem.defaultMinsSong, UpdateSourceTrigger=PropertyChanged}" />

                                <TextBlock VerticalAlignment="Center" TextWrapping="Wrap" FontSize="14" Text="Only estimate time based on requesters in chat: " Grid.Column="0" Grid.Row="13" HorizontalAlignment="Right" />
                                <CheckBox x:Name="inChatEstimateTime" FontSize="14" VerticalAlignment="Center" Grid.Column="1" Grid.Row="13" IsChecked="{Binding requestSystem.inChatEstimateTime, UpdateSourceTrigger=PropertyChanged}" />


                                <Button FontSize="12" Style="{DynamicResource SquareButtonStyle}" x:Name="GO4" Content="Apply" Click="writeToConfig" Grid.Column="0" Grid.Row="14" Grid.ColumnSpan="4"  />

                            </Grid>
                        </ScrollViewer>
                    </TabItem>

                    <TabItem Header="Music" FontSize="14">
                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" >
                            <StackPanel>
                                <Border Padding="10 0 10 0">
                                    <StackPanel Grid.Column="0">
                                        <TextBlock FontSize="14" Text="Request" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*" />
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap" Grid.Column="0" Controls:TextBoxHelper.ClearTextButton="True" x:Name="requestCommandNames" FontSize="14" Text="{Binding Path=requestSystem.requestComm.input, Converter={StaticResource ListToStringConverter}}" />
                                            <ComboBox x:Name="requestLevel" Grid.Column="1" FontSize="14" SelectedIndex="{Binding requestSystem.requestComm.level, UpdateSourceTrigger=PropertyChanged}">
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Trigger Requests: [on/off]" VerticalAlignment="Center" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBox TextWrapping="Wrap" Grid.Column="0" Controls:TextBoxHelper.ClearTextButton="True" x:Name="triggerRequestsCommandNames" FontSize="14" Text="{Binding Path=requestSystem.triggerRequestsComm.input, Converter={StaticResource ListToStringConverter}}" />
                                            <ComboBox x:Name="triggerRequestsLevel" Grid.Column="1" FontSize="14" SelectedIndex="{Binding requestSystem.triggerRequestsComm.level, UpdateSourceTrigger=PropertyChanged}">
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Play Song from Favorites" Cursor="None" VerticalAlignment="Center" Grid.Row="2" Grid.Column="0" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap"  Controls:TextBoxHelper.ClearTextButton="True" x:Name="playFavCommandNames" FontSize="14" Grid.Column="0" Text="{Binding Path=requestSystem.favSongComm.input, Converter={StaticResource ListToStringConverter}}" />
                                            <ComboBox x:Name="playFavLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding requestSystem.favSongComm.level, UpdateSourceTrigger=PropertyChanged}">
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Display Song List" Cursor="None" VerticalAlignment="Center" Grid.Row="3" Grid.Column="0" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap"  Controls:TextBoxHelper.ClearTextButton="True" x:Name="songListCommandNames"  FontSize="14" Grid.Column="0" Text="{Binding Path=requestSystem.songlistComm.input, Converter={StaticResource ListToStringConverter}}"/>
                                            <ComboBox x:Name="songListLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding requestSystem.songlistComm.level, UpdateSourceTrigger=PropertyChanged}">
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Total # of Songs in List" Cursor="None" VerticalAlignment="Center" Grid.Row="4" Grid.Column="0" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap"  Controls:TextBoxHelper.ClearTextButton="True" x:Name="getTotalSongsInListCommandNames" FontSize="14" Grid.Column="0" Text="{Binding Path=requestSystem.getTotalComm.input, Converter={StaticResource ListToStringConverter}}" />
                                            <ComboBox x:Name="getTotalSongsLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding requestSystem.getTotalComm.level, UpdateSourceTrigger=PropertyChanged}">
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Total Current Viewers" Cursor="None" VerticalAlignment="Center" Grid.Row="5" Grid.Column="0" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap"  Controls:TextBoxHelper.ClearTextButton="True" x:Name="getViewerCountCommandNames" FontSize="14" Grid.Column="0" Text="{Binding Path=getViewerComm.input, Converter={StaticResource ListToStringConverter}}"  />
                                            <ComboBox x:Name="getViewerCountLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding getViewerComm.level, UpdateSourceTrigger=PropertyChanged}">
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Add Song to Top of List" Cursor="None" VerticalAlignment="Center" Grid.Row="6" Grid.Column="0" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap"  Controls:TextBoxHelper.ClearTextButton="True" x:Name="addTopCommandNames" FontSize="14" Grid.Column="0" Text="{Binding Path=requestSystem.addtopComm.input, Converter={StaticResource ListToStringConverter}}" />
                                            <ComboBox x:Name="addTopLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding requestSystem.addtopComm.level, UpdateSourceTrigger=PropertyChanged}">
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Add VIP song" Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="7" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap"  Controls:TextBoxHelper.ClearTextButton="True" x:Name="addVipCommandNames"  FontSize="14" Grid.Column="0" Text="{Binding Path=requestSystem.addvipComm.input, Converter={StaticResource ListToStringConverter}}" />
                                            <ComboBox x:Name="addVipLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding requestSystem.addvipComm.level, UpdateSourceTrigger=PropertyChanged}">
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Edit Current Song" Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="8" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" x:Name="editCommandNames"  FontSize="14" Grid.Column="0" Text="{Binding Path=requestSystem.editComm.input, Converter={StaticResource ListToStringConverter}}" />
                                            <ComboBox x:Name="editLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding requestSystem.editComm.level, UpdateSourceTrigger=PropertyChanged}">
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Skip To Next Song" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" x:Name="nextCommandNames" FontSize="14" Grid.Column="0" Text="{Binding Path=requestSystem.nextComm.input, Converter={StaticResource ListToStringConverter}}"/>
                                            <ComboBox x:Name="nextLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding requestSystem.nextComm.level, UpdateSourceTrigger=PropertyChanged}">
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Clear Song List" Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="10" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" x:Name="clearCommandNames"  FontSize="14" Grid.Column="0" Text="{Binding Path=requestSystem.clearComm.input, Converter={StaticResource ListToStringConverter}}" />
                                            <ComboBox x:Name="clearLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding requestSystem.clearComm.level, UpdateSourceTrigger=PropertyChanged}" >
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Display Current Song" Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="11" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" x:Name="displayCurrentCommandName" FontSize="14" Grid.Column="0" Text="{Binding Path=requestSystem.getCurrentComm.input, Converter={StaticResource ListToStringConverter}}" />
                                            <ComboBox x:Name="displayCurrentLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding requestSystem.getCurrentComm.level, UpdateSourceTrigger=PropertyChanged}" >
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Display Next Song" Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="14" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" x:Name="displayNextSongCommandName" FontSize="14" Grid.Column="0" Text="{Binding Path=requestSystem.getNextComm.input, Converter={StaticResource ListToStringConverter}}" />
                                            <ComboBox x:Name="displayNextLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding requestSystem.getNextComm.level, UpdateSourceTrigger=PropertyChanged}" >
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Random Next Song" Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="13" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" x:Name="randomNextSongCommandName"  FontSize="14" Grid.Column="0" Text="{Binding Path=requestSystem.randomComm.input, Converter={StaticResource ListToStringConverter}}" />
                                            <ComboBox x:Name="randomNextSongLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding requestSystem.randomComm.level, UpdateSourceTrigger=PropertyChanged}" >
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Edit Requester Song" Cursor="None" VerticalAlignment="Center" Grid.Row="14" Grid.Column="0" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" x:Name="editReqSongCommandName" FontSize="14" Grid.Column="0" Text="{Binding Path=requestSystem.editSongComm.input, Converter={StaticResource ListToStringConverter}}" />
                                            <ComboBox x:Name="editReqSongLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding requestSystem.editSongComm.level, UpdateSourceTrigger=PropertyChanged}" >
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Remove Requester Song" Cursor="None" VerticalAlignment="Center" Grid.Row="15" Grid.Column="0" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" x:Name="removeReqSongCommand"  FontSize="14" Grid.Column="0" Text="{Binding Path=requestSystem.removeSongComm.input, Converter={StaticResource ListToStringConverter}}" />
                                            <ComboBox x:Name="removeReqSongLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding requestSystem.removeSongComm.level, UpdateSourceTrigger=PropertyChanged}" >
                                                <ComboBoxItem>Everyone</ComboBoxItem>
                                                <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                                <ComboBoxItem>Streamer</ComboBoxItem>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Add Donator Song" Cursor="None" VerticalAlignment="Center" Grid.Row="16" Grid.Column="0" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" x:Name="addDonationCommand" FontSize="14" Grid.Column="0" Text="{Binding Path=requestSystem.adddonatorComm.input, Converter={StaticResource ListToStringConverter}}" />
                                            <ComboBox x:Name="addDonationLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding requestSystem.adddonatorComm.level, UpdateSourceTrigger=PropertyChanged}" >
                                                <ComboBoxItem Content="Everyone"/>
                                                <ComboBoxItem Content="Subs, Mods, Streamer"/>
                                                <ComboBoxItem Content="Mods, Streamer"/>
                                                <ComboBoxItem Content="Streamer"/>
                                            </ComboBox>
                                        </Grid>
                                        <TextBlock Margin="0 10 0 0" FontSize="14" Text="Song Position" Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="17" />

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="2*"/>
                                                <ColumnDefinition Width="1*"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" x:Name="songPositionName" Grid.Column="0" FontSize="14" Text="{Binding Path=requestSystem.songPositionComm.input, Converter={StaticResource ListToStringConverter}}" />
                                            <ComboBox x:Name="songPositionLevel" FontSize="14" Grid.Column="1" SelectedIndex="{Binding requestSystem.songPositionComm.level, UpdateSourceTrigger=PropertyChanged}" >
                                                <ComboBoxItem Content="Everyone"/>
                                                <ComboBoxItem Content="Subs, Mods, Streamer"/>
                                                <ComboBoxItem Content="Mods, Streamer"/>
                                                <ComboBoxItem Content="Streamer"/>
                                            </ComboBox>
                                        </Grid>
                                    </StackPanel>
                                </Border>
                                <Button Margin="10 10 10 10" FontSize="14" Style="{DynamicResource SquareButtonStyle}" x:Name="GO5" Content="Apply" Click="writeToConfig" />
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>

                    <TabItem Header="Custom" FontSize="14">
                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" >
                            <Border Padding="10 0 10 0">
                                <StackPanel>
                                    <TextBlock FontSize="14" Text="Startup Message" VerticalAlignment="Center"/>

                                    <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" x:Name="startupMessage" FontSize="14" Text="{Binding startupMessage, UpdateSourceTrigger=PropertyChanged}" />

                                    <TextBlock Margin="0 10 0 0" FontSize="14" Text="Minigame End" VerticalAlignment="Center"/>
                                    <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" x:Name="minigameEndMessage" FontSize="14" Text="{Binding minigameEndMessage, UpdateSourceTrigger=PropertyChanged}" />

                                    <TextBlock Margin="0 10 0 0" FontSize="14" Text="Sub only requests" VerticalAlignment="Center" />
                                    <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" x:Name="subOnlyRequests" FontSize="14" Text="{Binding subOnlyRequests, UpdateSourceTrigger=PropertyChanged}" />

                                    <TextBlock Margin="0 10 0 0" FontSize="14" Text="Closing Message" VerticalAlignment="Center" />
                                    <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" x:Name="endMessage" FontSize="14" Text="{Binding endMessage, UpdateSourceTrigger=PropertyChanged}" />

                                    <Button Margin="0 10 0 0" FontSize="14" Style="{DynamicResource SquareButtonStyle}" x:Name="reloadFollowersButton" Content="Reload all follower data" Click="reloadFollowersButton_Click" Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="4"  />
                                    <Button Margin="0 10 0 0" FontSize="14" Style="{DynamicResource SquareButtonStyle}" x:Name="giveAllFollowersFollowPayout" Content="Give all followers the follower payout that missed it in the past" Click="giveAllFollowersFollowPayout_Click" Grid.Column="0" Grid.Row="5" Grid.ColumnSpan="4"  />
                                    <Button Margin="0 10 0 0" FontSize="14" Style="{DynamicResource SquareButtonStyle}" x:Name="GO3" Content="Apply" Click="writeToConfig" Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="4"  />

                                </StackPanel>
                            </Border>
                        </ScrollViewer>
                    </TabItem>

                    <TabItem Header="GUI" FontSize="12">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16*"/>
                                <ColumnDefinition Width="16*"/>
                                <ColumnDefinition Width="16*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10*"/>
                                <RowDefinition Height="10*"/>
                                <RowDefinition Height="10*"/>
                                <RowDefinition Height="10*"/>
                                <RowDefinition Height="10*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="GUI Background Color: " Grid.Row="0" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            <ComboBox x:Name="colorChange" SelectionChanged="colorChange_SelectionChanged" MaxDropDownHeight="280" Grid.Row="0" Grid.Column="2" SelectedIndex="{Binding guiBackgroundColor, UpdateSourceTrigger=PropertyChanged}" >
                                <ComboBoxItem Background="White">White</ComboBoxItem>
                                <ComboBoxItem Background="Black" Foreground="White">Black</ComboBoxItem>
                                <ComboBoxItem Background="AliceBlue">AliceBlue</ComboBoxItem>
                                <ComboBoxItem Background="LightBlue">LightBlue</ComboBoxItem>
                                <ComboBoxItem Background="Bisque">Bisque</ComboBoxItem>
                                <ComboBoxItem Background="ForestGreen">ForestGreen</ComboBoxItem>
                                <ComboBoxItem Background="Pink">Pink</ComboBoxItem>
                                <ComboBoxItem Background="Lavender">Lavender</ComboBoxItem>
                                <ComboBoxItem Background="Orange">Orange</ComboBoxItem>
                                <ComboBoxItem Background="OliveDrab">OliveDrab</ComboBoxItem>
                                <ComboBoxItem Background="Orchid">Orchid</ComboBoxItem>
                                <ComboBoxItem Background="LightGreen">LightGreen</ComboBoxItem>
                                <ComboBoxItem Background="SeaShell">SeaShell</ComboBoxItem>
                                <ComboBoxItem Background="Sienna">Sienna</ComboBoxItem>
                                <ComboBoxItem Background="LightGreen">LightGreen</ComboBoxItem>
                                <ComboBoxItem Background="DarkCyan">DarkCyan</ComboBoxItem>
                                <ComboBoxItem Background="DarkSalmon">DarkSalmon</ComboBoxItem>
                                <ComboBoxItem Background="Firebrick">Firebrick</ComboBoxItem>
                                <ComboBoxItem Background="IndianRed">IndianRed</ComboBoxItem>
                                <ComboBoxItem Background="LightSteelBlue">LightSteelBlue</ComboBoxItem>
                                <ComboBoxItem Background="LemonChiffon">LemonChiffon</ComboBoxItem>
                                <ComboBoxItem Background="MediumPurple">MediumPurple</ComboBoxItem>
                                <ComboBoxItem Background="RosyBrown">RosyBrown</ComboBoxItem>
                                <ComboBoxItem Background="SandyBrown">SandyBrown</ComboBoxItem>
                                <ComboBoxItem Background="Tomato">Tomato</ComboBoxItem>
                                <ComboBoxItem Background="YellowGreen">YellowGreen</ComboBoxItem>
                            </ComboBox>

                            <TextBlock Text="Text Color: " Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            <ComboBox x:Name="textColorChange" SelectionChanged="textColorChange_SelectionChanged" MaxDropDownHeight="280" Grid.Row="1" Grid.Column="2" SelectedIndex="{Binding guiTextColor, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBoxItem Background="White">White</ComboBoxItem>
                                <ComboBoxItem Background="Black" Foreground="White">Black</ComboBoxItem>
                                <ComboBoxItem Background="AliceBlue">AliceBlue</ComboBoxItem>
                                <ComboBoxItem Background="LightBlue">LightBlue</ComboBoxItem>
                                <ComboBoxItem Background="Bisque">Bisque</ComboBoxItem>
                                <ComboBoxItem Background="ForestGreen">ForestGreen</ComboBoxItem>
                                <ComboBoxItem Background="Pink">Pink</ComboBoxItem>
                                <ComboBoxItem Background="Lavender">Lavender</ComboBoxItem>
                                <ComboBoxItem Background="Orange">Orange</ComboBoxItem>
                                <ComboBoxItem Background="OliveDrab">OliveDrab</ComboBoxItem>
                                <ComboBoxItem Background="Orchid">Orchid</ComboBoxItem>
                                <ComboBoxItem Background="LightGreen">LightGreen</ComboBoxItem>
                                <ComboBoxItem Background="SeaShell">SeaShell</ComboBoxItem>
                                <ComboBoxItem Background="Sienna">Sienna</ComboBoxItem>
                                <ComboBoxItem Background="LightGreen">LightGreen</ComboBoxItem>
                                <ComboBoxItem Background="DarkCyan">DarkCyan</ComboBoxItem>
                                <ComboBoxItem Background="DarkSalmon">DarkSalmon</ComboBoxItem>
                                <ComboBoxItem Background="Firebrick">Firebrick</ComboBoxItem>
                                <ComboBoxItem Background="IndianRed">IndianRed</ComboBoxItem>
                                <ComboBoxItem Background="LightSteelBlue">LightSteelBlue</ComboBoxItem>
                                <ComboBoxItem Background="LemonChiffon">LemonChiffon</ComboBoxItem>
                                <ComboBoxItem Background="MediumPurple">MediumPurple</ComboBoxItem>
                                <ComboBoxItem Background="RosyBrown">RosyBrown</ComboBoxItem>
                                <ComboBoxItem Background="SandyBrown">SandyBrown</ComboBoxItem>
                                <ComboBoxItem Background="Tomato">Tomato</ComboBoxItem>
                                <ComboBoxItem Background="YellowGreen">YellowGreen</ComboBoxItem>
                            </ComboBox>

                            <TextBlock Text="TextBlock Color: " Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            <ComboBox x:Name="textblockcolor" SelectionChanged="textblockcolor_SelectionChanged" MaxDropDownHeight="280" Grid.Row="2" Grid.Column="2" SelectedIndex="{Binding guiTextBlockColor, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBoxItem Background="White">White</ComboBoxItem>
                                <ComboBoxItem Background="Black" Foreground="White">Black</ComboBoxItem>
                                <ComboBoxItem Background="AliceBlue">AliceBlue</ComboBoxItem>
                                <ComboBoxItem Background="LightBlue">LightBlue</ComboBoxItem>
                                <ComboBoxItem Background="Bisque">Bisque</ComboBoxItem>
                                <ComboBoxItem Background="ForestGreen">ForestGreen</ComboBoxItem>
                                <ComboBoxItem Background="Pink">Pink</ComboBoxItem>
                                <ComboBoxItem Background="Lavender">Lavender</ComboBoxItem>
                                <ComboBoxItem Background="Orange">Orange</ComboBoxItem>
                                <ComboBoxItem Background="OliveDrab">OliveDrab</ComboBoxItem>
                                <ComboBoxItem Background="Orchid">Orchid</ComboBoxItem>
                                <ComboBoxItem Background="LightGreen">LightGreen</ComboBoxItem>
                                <ComboBoxItem Background="SeaShell">SeaShell</ComboBoxItem>
                                <ComboBoxItem Background="Sienna">Sienna</ComboBoxItem>
                                <ComboBoxItem Background="LightGreen">LightGreen</ComboBoxItem>
                                <ComboBoxItem Background="DarkCyan">DarkCyan</ComboBoxItem>
                                <ComboBoxItem Background="DarkSalmon">DarkSalmon</ComboBoxItem>
                                <ComboBoxItem Background="Firebrick">Firebrick</ComboBoxItem>
                                <ComboBoxItem Background="IndianRed">IndianRed</ComboBoxItem>
                                <ComboBoxItem Background="LightSteelBlue">LightSteelBlue</ComboBoxItem>
                                <ComboBoxItem Background="LemonChiffon">LemonChiffon</ComboBoxItem>
                                <ComboBoxItem Background="MediumPurple">MediumPurple</ComboBoxItem>
                                <ComboBoxItem Background="RosyBrown">RosyBrown</ComboBoxItem>
                                <ComboBoxItem Background="SandyBrown">SandyBrown</ComboBoxItem>
                                <ComboBoxItem Background="Tomato">Tomato</ComboBoxItem>
                                <ComboBoxItem Background="YellowGreen">YellowGreen</ComboBoxItem>
                            </ComboBox>

                            <TextBlock Text="Input Font Style: " Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            <ComboBox x:Name="fontStyle" SelectionChanged="fontStyle_SelectionChanged" MaxDropDownHeight="280" Grid.Column="2" Grid.Row="3" SelectedIndex="{Binding guiInputFontStyle, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBoxItem FontFamily="Consolas">Consolas</ComboBoxItem>
                                <ComboBoxItem FontFamily="DejaVu Sans">DejaVu Sans</ComboBoxItem>
                                <ComboBoxItem FontFamily="Monaco">Monaco</ComboBoxItem>
                                <ComboBoxItem FontFamily="Lucida Console">Lucida Console</ComboBoxItem>
                                <ComboBoxItem FontFamily="Proggy">Proggy</ComboBoxItem>
                                <ComboBoxItem FontFamily="Courier New">Courier New</ComboBoxItem>
                                <ComboBoxItem FontFamily="Envy Code R">Envy Code R</ComboBoxItem>

                            </ComboBox>

                            <TextBlock Text="Button Color: " Grid.Row="4" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                            <ComboBox x:Name="buttonColor" SelectionChanged="buttonColor_SelectionChanged" MaxDropDownHeight="280" Grid.Column="2" Grid.Row="4" SelectedIndex="{Binding guiButtonColor, UpdateSourceTrigger=PropertyChanged}">
                                <ComboBoxItem Background="White">White</ComboBoxItem>
                                <ComboBoxItem Background="Black" Foreground="White">Black</ComboBoxItem>
                                <ComboBoxItem Background="AliceBlue">AliceBlue</ComboBoxItem>
                                <ComboBoxItem Background="LightBlue">LightBlue</ComboBoxItem>
                                <ComboBoxItem Background="Bisque">Bisque</ComboBoxItem>
                                <ComboBoxItem Background="ForestGreen">ForestGreen</ComboBoxItem>
                                <ComboBoxItem Background="Pink">Pink</ComboBoxItem>
                                <ComboBoxItem Background="Lavender">Lavender</ComboBoxItem>
                                <ComboBoxItem Background="Orange">Orange</ComboBoxItem>
                                <ComboBoxItem Background="OliveDrab">OliveDrab</ComboBoxItem>
                                <ComboBoxItem Background="Orchid">Orchid</ComboBoxItem>
                                <ComboBoxItem Background="LightGreen">LightGreen</ComboBoxItem>
                                <ComboBoxItem Background="SeaShell">SeaShell</ComboBoxItem>
                                <ComboBoxItem Background="Sienna">Sienna</ComboBoxItem>
                                <ComboBoxItem Background="LightGreen">LightGreen</ComboBoxItem>
                                <ComboBoxItem Background="DarkCyan">DarkCyan</ComboBoxItem>
                                <ComboBoxItem Background="DarkSalmon">DarkSalmon</ComboBoxItem>
                                <ComboBoxItem Background="Firebrick">Firebrick</ComboBoxItem>
                                <ComboBoxItem Background="IndianRed">IndianRed</ComboBoxItem>
                                <ComboBoxItem Background="LightSteelBlue">LightSteelBlue</ComboBoxItem>
                                <ComboBoxItem Background="LemonChiffon">LemonChiffon</ComboBoxItem>
                                <ComboBoxItem Background="MediumPurple">MediumPurple</ComboBoxItem>
                                <ComboBoxItem Background="RosyBrown">RosyBrown</ComboBoxItem>
                                <ComboBoxItem Background="SandyBrown">SandyBrown</ComboBoxItem>
                                <ComboBoxItem Background="Tomato">Tomato</ComboBoxItem>
                                <ComboBoxItem Background="YellowGreen">YellowGreen</ComboBoxItem>
                            </ComboBox>

                        </Grid>
                    </TabItem>

                </TabControl>
            </TabItem>

            <TabItem Header="Supporters" FontSize="12">
                <DataGrid x:Name="subsdatagrid" GridLinesVisibility="All" ItemsSource="{Binding supporters, UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AutoGenerateColumns="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CanUserSortColumns="False" >
                    <DataGrid.Columns>
                        <DataGridTemplateColumn x:Name="subsUserName" Header="User Name" Width=".25*" ToolTipService.ToolTip="Sort by Username">
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <EventSetter Event="Click" Handler="sortSubsByUserName" />
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding username}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn x:Name="subsIsSubbed" Header="Subbed" Width=".25*" ToolTipService.ToolTip="Sort by Subbed">
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <EventSetter Event="Click" Handler="sortSubsBySubbed" />
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding sub}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn x:Name="subsMonths" Header="Months" Width=".25*" ToolTipService.ToolTip="Sort by Months">
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <EventSetter Event="Click" Handler="sortSubsByMonths" />
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding months}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn x:Name="subsMoneyDonated" Header="Money Donated" Width=".25*" ToolTipService.ToolTip="Sort by Money">
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <EventSetter Event="Click" Handler="sortSubsByMoney" />
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding moneyDonated}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn x:Name="subsBitsDonated" Header="Bits Donated" Width=".25*" ToolTipService.ToolTip="Sort by Bits">
                            <DataGridTemplateColumn.HeaderStyle>
                                <Style TargetType="DataGridColumnHeader">
                                    <EventSetter Event="Click" Handler="sortSubsByBits" />
                                </Style>
                            </DataGridTemplateColumn.HeaderStyle>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding bitsDonated}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </TabItem>

            <TabItem FontSize="12" Header="Music">
                <TabControl x:Name="musictabholder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="LightBlue">
                    <TabControl.Template>
                        <ControlTemplate TargetType="TabControl">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="39"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TabPanel x:Name="HeaderPanel"
                              Panel.ZIndex ="1" 
                              KeyboardNavigation.TabIndex="1"
                              Grid.Column="0"
                              Grid.Row="0"
                              IsItemsHost="true"/>
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                          ContentSource="SelectedContent" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                            </Grid>
                        </ControlTemplate>
                    </TabControl.Template>

                    <TabItem Header="Queue" FontSize="12">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="8*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="10*"/>
                                <ColumnDefinition Width="10*"/>
                                <ColumnDefinition Width="10*"/>
                                <ColumnDefinition Width="10*"/>
                                <ColumnDefinition Width="10*"/>
                                <ColumnDefinition Width="10*"/>
                                <ColumnDefinition Width="10*"/>
                                <ColumnDefinition Width="10*"/>
                                <ColumnDefinition Width="10*"/>
                            </Grid.ColumnDefinitions>
                            <Controls:NumericUpDown x:Name="songplace" Controls:TextBoxHelper.Watermark="Queue Number" Value="1"  Minimum = "1" Maximum = "1000" Interval = "1" Grid.Column="6" />
                            <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Song Name" TextWrapping="Wrap" x:Name="editSong" Text="" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2"/>
                            <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Requester Name" TextWrapping="Wrap" x:Name="editRequester" Text="" VerticalScrollBarVisibility="Auto" Grid.Column="2" Grid.Row="0" Grid.ColumnSpan="4" />

                            <Button Style="{DynamicResource SquareButtonStyle}" ToolTipService.ToolTip="Click to insert new song into list at given position, will push following songs down." IsDefault="True" Content="Add" Click="addsong" Grid.Column="7" />
                            <Button Style="{DynamicResource SquareButtonStyle}" ToolTipService.ToolTip="Click to edit song at given position in list, will overwrite song at given queue number." Content="Edit" Click="editsong" Grid.Column="8" />

                            <DataGrid x:Name="songdatagrid" GridLinesVisibility="All" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ItemsSource="{Binding requestSystem.songList, UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AutoGenerateColumns="False" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="9" >
                                <DataGrid.Columns >
                                    <DataGridTemplateColumn x:Name="songnumber" Header="#" Width=".05*" >
                                        <DataGridTemplateColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" Text="{Binding index, UpdateSourceTrigger=PropertyChanged}" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn x:Name="songlevelinfo" Header="Level" Width=".1*" >
                                        <DataGridTemplateColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" Text="{Binding level, UpdateSourceTrigger=PropertyChanged}" ToolTipService.ToolTip="Click to edit song, double click to open song in Youtube." MouseLeftButtonDown="editSongButtonClick" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn x:Name="songnamecolumn" Header="Song" Width=".35*">
                                        <DataGridTemplateColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBlock TextWrapping="Wrap" HorizontalAlignment="Left" ToolTipService.ToolTip="Click to edit song, double click to open song link." MouseLeftButtonDown="editSongButtonClick" >
                                                    <TextBlock.Text>
                                                        <MultiBinding StringFormat="{}{0}&#x0a;{1} {2}">
                                                            <Binding Path="name" UpdateSourceTrigger="PropertyChanged" />
                                                            <Binding Path="requesterIsHere" UpdateSourceTrigger="PropertyChanged" />
                                                            <Binding Path="tuning" UpdateSourceTrigger="PropertyChanged" />
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn x:Name="songinfoduration" Header="Duration" Width=".1*" >
                                        <DataGridTemplateColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" Text="{Binding formattedDuration, UpdateSourceTrigger=PropertyChanged}" ToolTipService.ToolTip="Click to edit song, double click to open song link." MouseLeftButtonDown="editSongButtonClick" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn x:Name="requestercolumn" Header="Requester" Width=".1*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock TextWrapping="Wrap" HorizontalAlignment="Center" Text="{Binding requester, UpdateSourceTrigger=PropertyChanged}" ToolTipService.ToolTip="Double click to open requester's Twitch page." MouseLeftButtonDown="editRequesterButtonClick" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    
                                    <DataGridTemplateColumn x:Name="moveupcolumn" Header="Move Up" Width=".1*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Width="35" Height="35" Style="{DynamicResource MetroCircleButtonStyle}" Click="moveup" CommandParameter="{Binding}" ToolTipService.ToolTip="Click to move this song up in the list.">
                                                    <Rectangle Width="20" Height="20" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_arrow_up}" />
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                </Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn x:Name="deletecolumn" Header="Remove" Width=".1*">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Width="35" Height="35" HorizontalAlignment="Center" Style="{DynamicResource MetroCircleButtonStyle}" Click="deleteSong" CommandParameter="{Binding}" ToolTipService.ToolTip="Click to remove song from the list.">
                                                    <Rectangle Width="20" Height="20" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                        <Rectangle.OpacityMask>
                                                            <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_delete}" />
                                                        </Rectangle.OpacityMask>
                                                    </Rectangle>
                                                </Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <TextBlock  VerticalAlignment="Center" FontSize="14" Text="{Binding requestSystem.songListLength, UpdateSourceTrigger=PropertyChanged,  StringFormat=Songs In Queue: {0}}"  Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center"/>
                            <TextBlock  VerticalAlignment="Center" FontSize="14" Text="{Binding requestSystem.formattedTotalTime, UpdateSourceTrigger=PropertyChanged, StringFormat=Estimated Time: {0}}"  Grid.Row="3" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Center"/>
                            <TextBlock  VerticalAlignment="Center" FontSize="14" Text="{Binding requestSystem.songsPlayedThisStream, UpdateSourceTrigger=PropertyChanged, StringFormat=Stream Songs: {0}}"  Grid.Row="3" Grid.Column="4" Grid.ColumnSpan="2" HorizontalAlignment="Center"/>
                            <TextBlock  VerticalAlignment="Center" FontSize="14" Text="{Binding requestSystem.songsPlayedTotal, UpdateSourceTrigger=PropertyChanged, StringFormat=Lifetime Songs: {0}}"  Grid.Row="3" Grid.Column="6" Grid.ColumnSpan="2" HorizontalAlignment="Center"/>
                            <Button Style="{DynamicResource SquareButtonStyle}" x:Name="clear" IsDefault="True" Background="White" Content="Clear" Click="clearlist" FontSize="16" Grid.Column="9" Grid.Row="2"/>
                        </Grid>
                    </TabItem>

                    <TabItem Header="History" FontSize="12">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height=".9*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <DataGrid x:Name="songhistorydatagrid" GridLinesVisibility="All" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ItemsSource="{Binding requestSystem.songHistory, UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AutoGenerateColumns="False" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5" >
                                <DataGrid.Columns >
                                    <DataGridTemplateColumn x:Name="songHistorySong" Header="Song History" Width=".15*">
                                        <DataGridTemplateColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBlock TextWrapping="Wrap" Text="{Binding}" HorizontalAlignment="Center" MouseLeftButtonDown="addsongtofavorites" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Button Style="{DynamicResource SquareButtonStyle}" x:Name="clearHistory" IsDefault="True" Background="White" Content="Clear History" Click="clearHistory_Click" FontSize="16" Grid.Column="4" Grid.Row="2"/>
                        </Grid>
                    </TabItem>

                    <TabItem Header="Favorites" FontSize="12">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height=".8*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="85*"/>
                                <ColumnDefinition Width="15*"/>
                                <ColumnDefinition Width="15*"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Type song here" Grid.Column="0" TextWrapping="Wrap" x:Name="favSongEdit" Text="" VerticalScrollBarVisibility="Auto" />
                            <Button Style="{DynamicResource SquareButtonStyle}" IsDefault="True" Content="Add/Edit" Click="addfavsong" Grid.Column="1" />
                            <Button Style="{DynamicResource SquareButtonStyle}" Content="Delete" Click="removefavsong" Grid.Column="2" />
                            <DataGrid x:Name="favoritesdatagrid" GridLinesVisibility="All" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" ItemsSource="{Binding requestSystem.favSongs, UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AutoGenerateColumns="False" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" >
                                <DataGrid.Columns >
                                    <DataGridTemplateColumn x:Name="favoriteSongs" Header=" Favorite Songs" Width=".15*">
                                        <DataGridTemplateColumn.CellTemplate >
                                            <DataTemplate >
                                                <TextBlock TextWrapping="Wrap" Text="{Binding}" HorizontalAlignment="Center" MouseLeftButtonDown="editFavSongButtonClick" />
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Button Style="{DynamicResource SquareButtonStyle}" x:Name="clearFavorites" IsDefault="True" Background="White" Content="Clear Favorites" Click="clearFavorites_Click" FontSize="16" Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="2"/>
                        </Grid>
                    </TabItem>
                </TabControl>
            </TabItem>

            <TabItem Header="Commands" FontSize="12">
                <TabControl x:Name="commandtabholder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="LightBlue">
                    <TabControl.Template>
                        <ControlTemplate TargetType="TabControl">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="39"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TabPanel x:Name="HeaderPanel"
                              Panel.ZIndex ="1" 
                              KeyboardNavigation.TabIndex="1"
                              Grid.Column="0"
                              Grid.Row="0"
                              IsItemsHost="true"/>
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                          ContentSource="SelectedContent" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                            </Grid>
                        </ControlTemplate>
                    </TabControl.Template>

                    <TabItem Header="Commands" FontSize="12">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="9*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="40*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="!commandName" TextWrapping="Wrap" x:Name="editCommand" Text="" Grid.Column="0" />
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Command response" TextWrapping="Wrap" x:Name="editResponse" Text="" VerticalScrollBarVisibility="Auto" Grid.Column="1" />
                                <Controls:NumericUpDown Controls:TextBoxHelper.Watermark="Cost for command" Minimum = "0" Maximum = "100000000" Interval = "1" x:Name="editCommandCost" Value="0" Grid.Column="2" />
                                <ComboBox x:Name="editCommandLevel" Grid.Column="3" Grid.Row="0" >
                                    <ComboBoxItem>Everyone</ComboBoxItem>
                                    <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                    <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                    <ComboBoxItem>Streamer</ComboBoxItem>
                                </ComboBox>
                                <Button Style="{DynamicResource SquareButtonStyle}" IsDefault="True" Content="Add/Edit" Click="addcommand" Grid.Column="4" />
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="Delete" Click="removecommand" Grid.Column="5" />
                            </Grid>
                            <Grid Grid.Row="1" >
                                <DataGrid x:Name="commanddatagrid" GridLinesVisibility="All" ItemsSource="{Binding userCommandList, UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AutoGenerateColumns="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn x:Name="commandName" Header="Command" Width=".13*" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding input[0]}" ToolTipService.ToolTip="Click to edit command." MouseLeftButtonDown="editCommandButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="commandResponse" Header="Response" Width=".72*" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding output}" ToolTipService.ToolTip="Click to edit command." MouseLeftButtonDown="editCommandButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="commandLevel" Header="Level" Width=".16*" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding level}" ToolTipService.ToolTip="Click to edit command." MouseLeftButtonDown="editCommandButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="commandCost" Header="Cost" Width=".16*" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding costToUse}" ToolTipService.ToolTip="Click to edit command." MouseLeftButtonDown="editCommandButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Grid>
                    </TabItem>

                    <TabItem Header="Timers" FontSize="12">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="80*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="18*"/>
                                    <ColumnDefinition Width="18*"/>
                                    <ColumnDefinition Width="18*"/>
                                    <ColumnDefinition Width="46*"/>
                                </Grid.ColumnDefinitions>
                                <Button Style="{DynamicResource SquareButtonStyle}" x:Name="IntervalsApply" Content="Apply" Click="writeToConfig" Grid.Column="2"  />
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text=" Intervals (Minutes):" Grid.Column="0"/>
                                <Controls:NumericUpDown x:Name="refreshtimer" Minimum = "1" Maximum = "1000" Interval = "1" Grid.Column="1" Value="{Binding timerTotal, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="18*"/>
                                    <ColumnDefinition Width="70*"/>
                                    <ColumnDefinition Width="5*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="!timerName" TextWrapping="Wrap" x:Name="editCommandTimed" Text="" Grid.Column="0" />
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Timer command response" TextWrapping="Wrap" x:Name="editResponseTimed" Text="" VerticalScrollBarVisibility="Auto" Grid.Column="1" />
                                <CheckBox x:Name="editToggleTimed" FontSize="14" Grid.Column="2" />
                                <Button Style="{DynamicResource SquareButtonStyle}" IsDefault="True" Content="Add/Edit" Click="addtimer" Grid.Column="3"/>
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="Delete" Click="removetimer" Grid.Column="4" />
                            </Grid>
                            <Grid Grid.Row="2">
                                <DataGrid x:Name="timerdatagrid" GridLinesVisibility="All" ItemsSource="{Binding timerCommandList, UpdateSourceTrigger=PropertyChanged}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" >
                                    <DataGrid.Columns >
                                        <DataGridTemplateColumn x:Name="timerName" Header="Command" Width=".15*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding input[0]}" ToolTipService.ToolTip="Click to edit timed command." MouseLeftButtonDown="editTimedCommandButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="timerResponse" Header="Response" Width=".75*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding output}" ToolTipService.ToolTip="Click to edit timed command." MouseLeftButtonDown="editTimedCommandButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="timerToggle" Header="Toggle" Width=".10*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding toggle}" ToolTipService.ToolTip="Click to edit timed command." MouseLeftButtonDown="editTimedCommandButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Grid>
                    </TabItem>

                    <TabItem Header="SFX" FontSize="12">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="80*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="25*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="30*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text=" Cooldown per user (seconds):" Grid.Column="0" />
                                <Controls:NumericUpDown x:Name="sfxCoolDownTextBox" Minimum = "0" Maximum = "10000" Interval = "1" Grid.Column="1" Value="{Binding soundEffect.sfxTimer, UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text=" Overall Cooldown (seconds):" Grid.Column="2" />
                                <Controls:NumericUpDown x:Name="sfxOverallCoolDown" Minimum = "0" Maximum = "10000" Interval = "1" Grid.Column="3" Value="{Binding soundEffect.SFXOverallCoolDown, UpdateSourceTrigger=PropertyChanged}" />
                                <Button Style="{DynamicResource SquareButtonStyle}" x:Name="IntervalsApply_Copy1" Content="Apply" Click="writeToConfig" Grid.Column="4"  />

                            </Grid>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="10*"/>
                                </Grid.ColumnDefinitions>

                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="!sfxCommandName" TextWrapping="Wrap" x:Name="editCommandSFX" Text="" Grid.Column="0"/>
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="SFX file path goes here after uploading" TextWrapping="Wrap" x:Name="editResponseSFX" IsEnabled="False" HorizontalScrollBarVisibility="Auto" Grid.Column="2" />
                                <Button Style="{DynamicResource SquareButtonStyle}" IsDefault="True" Content="Upload SFX" Click="uploadSFX" Grid.Column="1" />
                                
                                <Controls:NumericUpDown x:Name="volumeSetter" Minimum = "0" Maximum = "100" Interval = "1" Grid.Column="3" Grid.Row="1" Value="100"/>
                                <ComboBox x:Name="editSFXCommandLevel" Grid.Column="5" Grid.Row="0" >
                                    <ComboBoxItem>Everyone</ComboBoxItem>
                                    <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                    <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                    <ComboBoxItem>Streamer</ComboBoxItem>
                                </ComboBox>
                                
                                <Button Style="{DynamicResource SquareButtonStyle}" IsDefault="True" Content="Add/Edit" Click="addSFX" Grid.Column="6" />
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="Delete" Click="removeSFX" Grid.Column="7" />
                                <Controls:NumericUpDown Controls:TextBoxHelper.Watermark="Cost for command" Minimum = "0" Maximum = "100000000" Interval = "1" x:Name="editSFXcost" Value="0" Grid.Column="4" />

                                
                            </Grid>
                            <Grid Grid.Row="2">
                                <DataGrid x:Name="SFXdatagrid" GridLinesVisibility="All" ItemsSource="{Binding sfxCommandList, UpdateSourceTrigger=PropertyChanged}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" >
                                    <DataGrid.Columns >
                                        <DataGridTemplateColumn x:Name="SFXName" Header="Command" Width=".15*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding input[0]}" ToolTipService.ToolTip="Click to edit SFX." MouseLeftButtonDown="editSFXButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="SFXResponse" Header="SFX" Width=".55*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding output}" ToolTipService.ToolTip="Click to edit SFX." MouseLeftButtonDown="editSFXButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="SFXVolume" Header="Volume" Width=".10*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding volumeLevel}" ToolTipService.ToolTip="Click to edit SFX." MouseLeftButtonDown="editSFXButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="SFXcost" Header="Cost" Width=".10*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding costToUse}" ToolTipService.ToolTip="Click to edit SFX." MouseLeftButtonDown="editSFXButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="sfxLevel" Header="Level" Width=".15*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding level}" ToolTipService.ToolTip="Click to edit SFX." MouseLeftButtonDown="editSFXButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="playsfx" Header="Preview" Width=".15*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Width="35" Height="35" Style="{DynamicResource MetroCircleButtonStyle}" Click="playSound" CommandParameter="{Binding}" ToolTipService.ToolTip="Click to preview this SFX.">
                                                        <Rectangle Width="20" Height="20" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_control_play}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </Button>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Grid>
                    </TabItem>

                    <TabItem Header="Images" FontSize="12">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="10*"/>
                                <RowDefinition Height="10*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="70*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="25*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="30*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Open window on start: " Grid.Column="0" />
                                <CheckBox x:Name="openImageWindowOnStart" Grid.Column="1"  HorizontalAlignment="Left" IsChecked="{Binding image.openImageWindowOnStart, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Image Display Time (seconds):" Grid.Column="2" />
                                <Controls:NumericUpDown x:Name="imageDisplayTime" Minimum = "1" Maximum = "30" Interval = "1" Grid.Column="3" Value="{Binding image.imageDisplayTimeSeconds, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="25*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="30*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Cooldown per user (seconds):" Grid.Column="0" />
                                <Controls:NumericUpDown x:Name="imageCoolDown" Minimum = "0" Maximum = "10000" Interval = "1" Grid.Column="1" Value="{Binding image.imageCoolDown, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text=" Overall Cooldown (seconds):" Grid.Column="2" />
                                <Controls:NumericUpDown x:Name="ImagesOverallCoolDown" Minimum = "0" Maximum = "10000" Interval = "1" Grid.Column="3" Value="{Binding image.imageOverallCoolDown, UpdateSourceTrigger=PropertyChanged}" />
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="Apply" Click="writeToConfig" Grid.Column="4"  />

                            </Grid>
                            <Grid Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="25*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="15*"/>
                                </Grid.ColumnDefinitions>
                                <Button Style="{DynamicResource SquareButtonStyle}" IsDefault="True" Content="Add/Edit" Click="addImage" Grid.Column="5" />
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="Delete" Click="removeImage" Grid.Column="6" />
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="!imageCommandName" TextWrapping="Wrap" x:Name="editCommandImage" Text="" Grid.Column="0"/>
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Image file path goes here after uploading" TextWrapping="Wrap" x:Name="editResponseImage" IsEnabled="False" HorizontalScrollBarVisibility="Auto" Grid.Column="2" />
                                <Controls:NumericUpDown Controls:TextBoxHelper.Watermark="Cost for command" Minimum = "0" Maximum = "100000000" Interval = "1" x:Name="editImagecost" Value="0" Grid.Column="3" />
                                <ComboBox x:Name="editImageCommandLevel" Grid.Column="4" Grid.Row="0" >
                                    <ComboBoxItem>Everyone</ComboBoxItem>
                                    <ComboBoxItem>Subs, Mods, Streamer</ComboBoxItem>
                                    <ComboBoxItem>Mods, Streamer</ComboBoxItem>
                                    <ComboBoxItem>Streamer</ComboBoxItem>
                                </ComboBox>

                                <Button Style="{DynamicResource SquareButtonStyle}" IsDefault="True" Content="Upload Image" Click="uploadImage" Grid.Column="1" />
                            </Grid>
                            <Grid Grid.Row="3">
                                <DataGrid x:Name="imagedatagrid" GridLinesVisibility="All" ItemsSource="{Binding imageCommandList, UpdateSourceTrigger=PropertyChanged}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" >
                                    <DataGrid.Columns >
                                        <DataGridTemplateColumn x:Name="imageName" Header="Command" Width=".15*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding input[0]}" ToolTipService.ToolTip="Click to edit image." MouseLeftButtonDown="editImageButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="imageResponse" Header="Image" Width=".40*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding output}" ToolTipService.ToolTip="Click to edit image." MouseLeftButtonDown="editImageButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="imageCost" Header="Cost" Width=".15*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding costToUse}" ToolTipService.ToolTip="Click to edit image." MouseLeftButtonDown="editImageButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="imageLevel" Header="Level" Width=".15*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding level}" ToolTipService.ToolTip="Click to edit image." MouseLeftButtonDown="editImageButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="playimage" Header="Preview" Width=".15*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Width="35" Height="35" Style="{DynamicResource MetroCircleButtonStyle}" Click="playImage" CommandParameter="{Binding}" ToolTipService.ToolTip="Click to preview this image.">
                                                        <Rectangle Width="20" Height="20" Fill="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}">
                                                            <Rectangle.OpacityMask>
                                                                <VisualBrush Stretch="Fill" Visual="{DynamicResource appbar_control_play}" />
                                                            </Rectangle.OpacityMask>
                                                        </Rectangle>
                                                    </Button>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Grid>
                    </TabItem>

                    <TabItem Header="Hotkeys" FontSize="12">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="9*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="50*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Hot Key Input" TextWrapping="Wrap" x:Name="editHotKeyInput" Text="" Grid.Column="0" KeyDown="editHotKeyInput_KeyDown" />
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Command To Send" TextWrapping="Wrap" x:Name="editHotKeyCommand" Text="" VerticalScrollBarVisibility="Auto" Grid.Column="1" />

                                <Button Style="{DynamicResource SquareButtonStyle}" IsDefault="True" Content="Add/Edit" Click="addhotkey" Grid.Column="2" />
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="Delete" Click="removehotkey" Grid.Column="3" />
                            </Grid>
                            <Grid Grid.Row="1" >
                                <DataGrid x:Name="hotkeydatagrid" GridLinesVisibility="All" ItemsSource="{Binding hotkeyCommandList, UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AutoGenerateColumns="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn x:Name="hotKeyInput" Header="Hot Key" Width=".1*" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding input[0], UpdateSourceTrigger=PropertyChanged}" ToolTipService.ToolTip="Click to edit command." MouseLeftButtonDown="editHotKeyButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="hotKeyOutput" Header="Command To Send" Width=".9*" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding output, UpdateSourceTrigger=PropertyChanged}" ToolTipService.ToolTip="Click to edit command." MouseLeftButtonDown="editHotKeyButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Grid>
                    </TabItem>

                    <TabItem Header="Overrides" FontSize="12">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="9*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="40*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="15*"/>
                                </Grid.ColumnDefinitions>
                                <ComboBox Grid.Column="0" x:Name="editOverrideType" >
                                    <ComboBoxItem IsSelected="True">Love</ComboBoxItem>
                                    <ComboBoxItem>8-Ball</ComboBoxItem>
                                </ComboBox>
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Override Input" TextWrapping="Wrap" x:Name="editOverrideInput" Text="" VerticalScrollBarVisibility="Auto" Grid.Column="1" />
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Override Output" TextWrapping="Wrap" x:Name="editOverrideOutput" VerticalScrollBarVisibility="Auto" Text="" Grid.Column="2" />

                                <Button Style="{DynamicResource SquareButtonStyle}" IsDefault="True" Content="Add/Edit" Click="addoverride" Grid.Column="3" />
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="Delete" Click="removeoverride" Grid.Column="4" />
                            </Grid>
                            <Grid Grid.Row="1" >
                                <DataGrid x:Name="overridedatagrid" GridLinesVisibility="All" ItemsSource="{Binding overrideCommandList, UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AutoGenerateColumns="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn x:Name="overrideType" Header="Override Type" Width=".2*" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding overrideType, UpdateSourceTrigger=PropertyChanged}" ToolTipService.ToolTip="Click to edit override." MouseLeftButtonDown="editOverrideButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="overrideInput" Header="Override Input" Width=".2*" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding input[0], UpdateSourceTrigger=PropertyChanged}" ToolTipService.ToolTip="Click to edit override." MouseLeftButtonDown="editOverrideButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="overrideOutput" Header="Override Output" Width=".6*" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding output, UpdateSourceTrigger=PropertyChanged}" ToolTipService.ToolTip="Click to edit override." MouseLeftButtonDown="editOverrideButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Grid>
                    </TabItem>

                </TabControl>
            </TabItem>

            <TabItem Header="Currency" FontSize="12">
                <TabControl x:Name="currencytabholder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="LightBlue">
                    <TabControl.Template>
                        <ControlTemplate TargetType="TabControl">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="39"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TabPanel x:Name="HeaderPanel"
                              Panel.ZIndex ="1" 
                              KeyboardNavigation.TabIndex="1"
                              Grid.Column="0"
                              Grid.Row="0"
                              IsItemsHost="true"/>
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                          ContentSource="SelectedContent" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                            </Grid>
                        </ControlTemplate>
                    </TabControl.Template>


                    <TabItem Header="Settings" FontSize="12">

                        <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" >
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="50*"/>
                                    <ColumnDefinition Width="50*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock HorizontalAlignment="Right" FontSize="20" FontWeight="Bold" Text="Currency System: " Grid.Row="0" Grid.Column="0" />
                                <CheckBox x:Name="currencyToggle" FontSize="12" Checked="currency_changed" Unchecked="currency_changed" Grid.Row="0" Grid.Column="1" IsChecked="{Binding currency.toggle, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock  VerticalAlignment="Center"  FontSize="12" Grid.Row="1" Text="Currency Name: " Grid.Column="0" HorizontalAlignment="Right"/>
                                <TextBox x:Name="currencyName" HorizontalAlignment="Left" FontSize="12" Grid.Row="1" Grid.Column="1" Text="{Binding currency.currencyName, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock  VerticalAlignment="Center"  FontSize="12" Grid.Row="2" Text="Command Name: " Grid.Column="0" HorizontalAlignment="Right"/>
                                <TextBox x:Name="currencyCommand" HorizontalAlignment="Left" FontSize="12" Grid.Row="2" Grid.Column="1" Text="{Binding currency.currencyCommand, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock VerticalAlignment="Center"  FontSize="12" Text="Payout per minute (Viewers): " HorizontalAlignment="Right" Grid.Row="3" Grid.Column="0" />
                                <Controls:NumericUpDown x:Name="currencyPerMinute" Minimum = "0" Maximum = "100" Interval = "1" Grid.Column="1" Grid.Row="3" HorizontalAlignment="Left" Value="{Binding currency.currencyPerMinute, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock VerticalAlignment="Center"  FontSize="12" Text="Payout per minute (Subs): " HorizontalAlignment="Right" Grid.Row="4" Grid.Column="0" />
                                <Controls:NumericUpDown x:Name="currencyPerMinuteSubs" Minimum = "0" Maximum = "100" Interval = "1" Grid.Column="1" Grid.Row="4" HorizontalAlignment="Left" Value="{Binding currency.currencyPerMinuteSubs, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Right" FontSize="12" Text="Gamble on / off: " Grid.Row="5" Grid.Column="0" />
                                <CheckBox x:Name="gambleToggle" FontSize="12" Checked="gamble_changed" Unchecked="gamble_changed" Grid.Row="5" Grid.Column="1" IsChecked="{Binding currency.gambleToggle, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock  VerticalAlignment="Center"  FontSize="12" Text="Max Gamble: " HorizontalAlignment="Right" Grid.Row="6" Grid.Column="0" />
                                <Controls:NumericUpDown x:Name="maxGamble" Minimum = "1" Maximum = "1000000" Interval = "1" Grid.Column="1" Grid.Row="6" HorizontalAlignment="Left" Value="{Binding currency.maxGamble, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock VerticalAlignment="Center"  FontSize="12" Grid.Row="7" Grid.Column="0" Text="Gamble Cool Down (minutes): " HorizontalAlignment="Right"/>
                                <Controls:NumericUpDown x:Name="gambleCoolDown" Minimum = "1" Maximum = "1000" Interval = "1" Grid.Column="1" Grid.Row="7" HorizontalAlignment="Left" Value="{Binding currency.gambleCoolDownMinutes, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock HorizontalAlignment="Right" FontSize="12" Text="VIP Songs on / off: " Grid.Row="8" Grid.Column="0" />
                                <CheckBox x:Name="vipsongtoggle" FontSize="12" Grid.Row="8" Grid.Column="1" Checked="vipsongcheck" Unchecked="vipsongcheck" IsChecked="{Binding currency.vipSongToggle, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock VerticalAlignment="Center"  FontSize="12" Grid.Row="9" Grid.Column="0" Text="!vipsong COST: " HorizontalAlignment="Right"/>
                                <Controls:NumericUpDown x:Name="vipsongcost" Minimum = "1" Maximum = "100000" Interval = "1" Grid.Column="1" Grid.Row="9" HorizontalAlignment="Left" Value="{Binding currency.vipSongCost, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock VerticalAlignment="Center"  FontSize="12" Grid.Row="10" Grid.Column="0" Text="VIP Song Redeem Cool Down (minutes): " HorizontalAlignment="Right"/>
                                <Controls:NumericUpDown x:Name="vipRedeemCoolDownMinutes" Minimum = "0" Maximum = "1000" Interval = "1" Grid.Column="1" Grid.Row="10" HorizontalAlignment="Left" Value="{Binding currency.vipRedeemCoolDownMinutes, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock VerticalAlignment="Center"  FontSize="12" Text="Sub Credit Song Redeem Cost: " HorizontalAlignment="Right" Grid.Row="11" Grid.Column="0" />
                                <Controls:NumericUpDown x:Name="subCreditRedeemCost" Minimum = "0" Maximum = "100" Interval = "1" Grid.Column="1" Grid.Row="11" HorizontalAlignment="Left" Value="{Binding currency.subCreditRedeemCost, UpdateSourceTrigger=PropertyChanged}"/>

                                <TextBlock VerticalAlignment="Center"  FontSize="12" Text="Sub Credit Rewarded Per Sub: " HorizontalAlignment="Right" Grid.Row="12" Grid.Column="0" />
                                <Controls:NumericUpDown x:Name="creditsPerSub" Minimum = "0" Maximum = "100" Interval = "1" Grid.Column="1" Grid.Row="12" HorizontalAlignment="Left" Value="{Binding currency.creditsPerSub, UpdateSourceTrigger=PropertyChanged}"/>

                                <Button Style="{DynamicResource SquareButtonStyle}" x:Name="GO2" Content="Apply" Click="writeToConfig" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="13" Grid.RowSpan="2"/>


                            </Grid>
                        </ScrollViewer>
                    </TabItem>

                    <TabItem Header="Users" FontSize="12">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="8*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="User Name" TextWrapping="Wrap" x:Name="editCurrencyUserName" Text="" Grid.Column="0" />
                                <Controls:NumericUpDown Controls:TextBoxHelper.Watermark="Currency Amount" Minimum = "0" Maximum = "100000000" Interval = "1" x:Name="editCurrencyAmount" Value="0" Grid.Column="1" />
                                <Controls:NumericUpDown Controls:TextBoxHelper.Watermark="Time in Minutes" Minimum = "0" Maximum = "100000000" Interval = "1" x:Name="editCurrencyTime" Value="0" Grid.Column="2" />
                                <Controls:NumericUpDown Controls:TextBoxHelper.Watermark="Sub Credits" Minimum = "0" Maximum = "100000000" Interval = "1" x:Name="editCurrencySubCredits" Value="0" Grid.Column="3" />

                                <Button Style="{DynamicResource SquareButtonStyle}" IsDefault="True" Content="Add/Edit" Click="addcurrency" Grid.Column="4" />
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="Delete" Click="removecurrency" Grid.Column="5" />
                            </Grid>
                            <Grid Grid.Row="1" >
                                <DataGrid x:Name="currencydatagrid" GridLinesVisibility="All" ItemsSource="{Binding users, UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AutoGenerateColumns="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CanUserSortColumns="False" >
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn x:Name="currencyRank" Header="Rank Title" Width=".1*" ToolTipService.ToolTip="Sort by Rank">
                                            <DataGridTemplateColumn.HeaderStyle>
                                                <Style TargetType="DataGridColumnHeader">
                                                    <EventSetter Event="Click" Handler="sortByRankTitle" />
                                                </Style>
                                            </DataGridTemplateColumn.HeaderStyle>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding rank}" ToolTipService.ToolTip="Click to edit user currency." MouseLeftButtonDown="editCurrencyButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="currencyUserName" Header="User Name" Width=".25*" ToolTipService.ToolTip="Sort by Username">
                                            <DataGridTemplateColumn.HeaderStyle>
                                                <Style TargetType="DataGridColumnHeader">
                                                    <EventSetter Event="Click" Handler="sortByUserName" />
                                                </Style>
                                            </DataGridTemplateColumn.HeaderStyle>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding username}" ToolTipService.ToolTip="Click to edit user currency." MouseLeftButtonDown="editCurrencyButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="currencyAmount" Header="Currency Amount" Width=".15*" ToolTipService.ToolTip="Sort by Currency Amount">
                                            <DataGridTemplateColumn.HeaderStyle>
                                                <Style TargetType="DataGridColumnHeader">
                                                    <EventSetter Event="Click" Handler="sortByAmount" />
                                                </Style>
                                            </DataGridTemplateColumn.HeaderStyle>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding points}" ToolTipService.ToolTip="Click to edit user currency." MouseLeftButtonDown="editCurrencyButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="currencyTime" Header="Minutes Spent" Width=".15*" ToolTipService.ToolTip="Sort by Hours Spent.">
                                            <DataGridTemplateColumn.HeaderStyle>
                                                <Style TargetType="DataGridColumnHeader">
                                                    <EventSetter Event="Click" Handler="sortByMinutes" />
                                                </Style>
                                            </DataGridTemplateColumn.HeaderStyle>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding time}" ToolTipService.ToolTip="Click to edit user currency." MouseLeftButtonDown="editCurrencyButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="currencySubCredits" Header="Sub Credits" Width=".15*" ToolTipService.ToolTip="Sort by Sub Credits.">
                                            <DataGridTemplateColumn.HeaderStyle>
                                                <Style TargetType="DataGridColumnHeader">
                                                    <EventSetter Event="Click" Handler="sortBySubCredits" />
                                                </Style>
                                            </DataGridTemplateColumn.HeaderStyle>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding subCredits}" ToolTipService.ToolTip="Click to edit user currency." MouseLeftButtonDown="editCurrencyButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>

                        </Grid>
                    </TabItem>

                    <TabItem Header="Rankings" FontSize="12">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="8*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="25*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" Text="Rank Upgrade Unit Cost:" Grid.Column="0"/>
                                <ComboBox Grid.Column="1" x:Name="rankunitdropbox" SelectedIndex="{Binding currency.rankupUnitCost, UpdateSourceTrigger=PropertyChanged}">
                                    <ComboBoxItem IsSelected="True">Points (Auto Upgrade)</ComboBoxItem>
                                    <ComboBoxItem>Points (Cost To Upgrade)</ComboBoxItem>
                                    <ComboBoxItem>Hours (Auto Upgrade)</ComboBoxItem>
                                </ComboBox>
                                <Button FontSize="12" Style="{DynamicResource SquareButtonStyle}" Content="Apply" Click="writeToConfig" Grid.Column="2"/>
                                <TextBlock FontSize="12" VerticalAlignment="Center" HorizontalAlignment="Center" Text="*Rank Order Is Based On Cost To Upgrade*" Grid.Column="3"/>
                            </Grid>

                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="25*"/>
                                    <ColumnDefinition Width="25*"/>
                                    <ColumnDefinition Width="25*"/>
                                    <ColumnDefinition Width="25*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Rank Title" TextWrapping="Wrap" x:Name="editRankTitle" Text="" VerticalScrollBarVisibility="Auto" Grid.Column="0" />
                                <Controls:NumericUpDown Controls:TextBoxHelper.Watermark="Rank Cost" Minimum = "0" Maximum = "100000000" Interval = "1" x:Name="editRankCost" Value="0" Grid.Column="1" />

                                <Button Style="{DynamicResource SquareButtonStyle}" IsDefault="True" Content="Add/Edit" Click="addrank" Grid.Column="2" />
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="Delete" Click="removerank" Grid.Column="3" />
                            </Grid>

                            <Grid Grid.Row="2" >
                                <DataGrid x:Name="rankgrid" GridLinesVisibility="All" ItemsSource="{Binding currency.ranks, UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AutoGenerateColumns="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CanUserSortColumns="False" >
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn x:Name="rankTitle" Header="Rank Title" Width=".33*" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding Key}" ToolTipService.ToolTip="Click to edit rank title." MouseLeftButtonDown="editRankButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="rankCost" Header="Cost To Upgrade" Width=".33*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding Value}" ToolTipService.ToolTip="Click to edit rank cost." MouseLeftButtonDown="editRankButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>

                        </Grid>
                    </TabItem>

                    <TabItem Header="Rewards" FontSize="12">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="9*"/>
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="40*"/>
                                    <ColumnDefinition Width="10*"/>
                                    <ColumnDefinition Width="10*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Reward Title" TextWrapping="Wrap" x:Name="editRewardName" Text="" VerticalScrollBarVisibility="Auto" Grid.Column="0" />
                                <Controls:NumericUpDown x:Name="editRewardCost" Minimum = "0" Maximum = "1000000" Interval = "1" Value="0" Grid.Column="1" />
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Message Output" TextWrapping="Wrap" x:Name="editRewardOutput" Text="" VerticalScrollBarVisibility="Auto" Grid.Column="2" />
                                
                                <Button Style="{DynamicResource SquareButtonStyle}" IsDefault="True" Content="Add/Edit" Click="addreward" Grid.Column="3" />
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="Delete" Click="removereward" Grid.Column="4" />
                            </Grid>

                            <Grid Grid.Row="2" >
                                <DataGrid x:Name="customrewarddatagrid" GridLinesVisibility="All" ItemsSource="{Binding rewardCommandList, UpdateSourceTrigger=PropertyChanged}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" AutoGenerateColumns="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CanUserSortColumns="False" >
                                    <DataGrid.Columns>
                                        <DataGridTemplateColumn x:Name="rewardname" Header="Reward Name (!redeem [name])" Width=".33*" >
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding input[0]}" ToolTipService.ToolTip="Click to edit reward name." MouseLeftButtonDown="editRewardButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="rewardcost" Header="Reward Cost" Width=".33*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding costToUse}" ToolTipService.ToolTip="Click to edit reward cost." MouseLeftButtonDown="editRewardButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="rewardoutput" Header="Message Output" Width=".33*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding output}" ToolTipService.ToolTip="Click to edit reward message ouput." MouseLeftButtonDown="editRewardButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>

                        </Grid>
                    </TabItem>


                </TabControl>
            </TabItem>

            <TabItem Header="Quotes" FontSize="12">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="10*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="80*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="12*"/>
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition Width="25*"/>
                            <ColumnDefinition Width="4*"/>
                            <ColumnDefinition Width="20*"/>
                            <ColumnDefinition Width="35*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Text="Quotes on: " Grid.Column="0" TextAlignment="Center"/>
                        <CheckBox x:Name="quotesOn" Grid.Column="1" IsChecked="{Binding quote.quotesOn, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock HorizontalAlignment="Right" VerticalAlignment="Center" Text="Mods/Streamer Only Adders: " Grid.Column="2" TextAlignment="Center"/>
                        <CheckBox x:Name="quotesModOnly" Grid.Column="3" IsChecked="{Binding quote.quotesModOnly, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button Style="{DynamicResource SquareButtonStyle}" Content="Apply" Click="writeToConfig" Grid.Column="4" />
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="85*"/>
                            <ColumnDefinition Width="15*"/>
                            <ColumnDefinition Width="15*"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Type quote here (example: &quot; This is an amazing quote! -theBestStreamer 1/24/2017 &quot;)" Grid.Column="0" TextWrapping="Wrap" x:Name="quoteEdit" Text="" VerticalScrollBarVisibility="Auto" />
                        <Button Style="{DynamicResource SquareButtonStyle}" IsDefault="True" Content="Edit" Click="addquote" Grid.Column="1" />
                        <Button Style="{DynamicResource SquareButtonStyle}" Content="Delete" Click="removequote" Grid.Column="2" />
                    </Grid>
                    <Grid Grid.Row="2">
                        <DataGrid x:Name="quotesdatagrid" GridLinesVisibility="All" ItemsSource="{Binding quote.quotes, UpdateSourceTrigger=PropertyChanged}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" >
                            <DataGrid.Columns >
                                <DataGridTemplateColumn x:Name="quoteName" Header="Quote" Width=".15*">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock TextWrapping="Wrap" Text="{Binding}" ToolTipService.ToolTip="Click to edit quote." MouseLeftButtonDown="editQuteButtonClick" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </Grid>
            </TabItem>

            

            <TabItem Header="Games" FontSize="12">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" >
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*"/>
                            <ColumnDefinition Width="50*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock HorizontalAlignment="Right" FontSize="20" FontWeight="Bold" Text="Guessing Game: " Grid.Row="0" Grid.Column="0" VerticalAlignment="Center"/>
                        <CheckBox x:Name="minigameToggle" FontSize="12" Checked="minigame_changed" Unchecked="minigame_changed" Grid.Row="0" Grid.Column="1" IsChecked="{Binding minigameOn, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock  VerticalAlignment="Center"  FontSize="12" Grid.Row="1" Grid.Column="0" Text="Guessing Timer (seconds): " HorizontalAlignment="Right"/>
                        <Controls:NumericUpDown x:Name="minigametimer" Minimum = "1" Maximum = "10000" Interval = "1" Grid.Column="1" Grid.Row="1" HorizontalAlignment="Left" Value="{Binding minigameTimer, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock  VerticalAlignment="Center" TextWrapping="Wrap" FontSize="12" Grid.Row="2" Grid.Column="0" Text="Game Payout (Leave at 0 to payout winning guess amount): " HorizontalAlignment="Right"/>
                        <Controls:NumericUpDown x:Name="guessingGamePayout" Minimum = "0" Maximum = "10000" Interval = "1" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" Value="{Binding guessingGamePayout, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock VerticalAlignment="Center" FontSize="20" FontWeight="Bold" Text="Adventure Game: " Grid.Row="3" Grid.Column="0" HorizontalAlignment="Right"/>
                        <CheckBox x:Name="adventureToggle" FontSize="12" Checked="adventure_changed" Unchecked="adventure_changed" Grid.Row="3" Grid.Column="1" IsChecked="{Binding adventureToggle, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock  VerticalAlignment="Center"  FontSize="12" Grid.Column="0" Grid.Row="4" Text="Cool Down Time (minutes): " HorizontalAlignment="Right"/>
                        <Controls:NumericUpDown x:Name="adventurecooldowntime" Minimum = "1" Maximum = "1000" Interval = "1" Grid.Column="1" Grid.Row="4" HorizontalAlignment="Left" Value="{Binding textAdventure.adventureCoolDown, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock  VerticalAlignment="Center"  FontSize="12" Grid.Column="0" Grid.Row="5" Text="User Join Time (seconds): " HorizontalAlignment="Right"/>
                        <Controls:NumericUpDown x:Name="adventurejointime" Minimum = "1" Maximum = "10000" Interval = "1" Grid.Column="1" Grid.Row="5" HorizontalAlignment="Left" Value="{Binding textAdventure.adventureStartTime, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock  VerticalAlignment="Center"  FontSize="12" Grid.Column="0" Grid.Row="6" Text="Minimum Reward: " HorizontalAlignment="Right"/>
                        <Controls:NumericUpDown x:Name="adventureminreward" Minimum = "1" Maximum = "10000" Interval = "1" Grid.Column="1" Grid.Row="6" HorizontalAlignment="Left" Value="{Binding textAdventure.adventurePointsMin, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock  VerticalAlignment="Center"  FontSize="12" Grid.Column="0" Grid.Row="7" Text="Maximum Reward: " HorizontalAlignment="Right" />
                        <Controls:NumericUpDown x:Name="adventuremaxreward" Minimum = "1" Maximum = "10000" Interval = "1" Grid.Column="1" Grid.Row="7" HorizontalAlignment="Left" Value="{Binding textAdventure.adventurePointsMax, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock VerticalAlignment="Center" FontSize="20" FontWeight="Bold" Text="Custom Game: " Grid.Row="8" Grid.Column="0" HorizontalAlignment="Right"/>
                        <CheckBox x:Name="customGameAdventure" FontSize="12" Grid.Row="8" Grid.Column="1" IsChecked="{Binding customGameAdventure, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock HorizontalAlignment="Right" FontSize="12" Grid.Row="9" Text="Game Command: " Grid.Column="0" />
                        <TextBox x:Name="customGameCommand" Controls:TextBoxHelper.ClearTextButton="True" Grid.Row="9" Grid.Column="1" FontSize="14" TextWrapping="Wrap" Text="{Binding textAdventure.customGameCommand, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock HorizontalAlignment="Right" FontSize="12" Grid.Row="10" Text="Start By Mod Only: " Grid.Column="0" />
                        <CheckBox x:Name="customGameStartByModOnly" FontSize="12" Grid.Row="10" Grid.Column="1" IsChecked="{Binding textAdventure.customGameStartByModOnly, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock  VerticalAlignment="Center"  FontSize="12" Grid.Column="0" Grid.Row="11" Text="Cool Down Time (minutes): " HorizontalAlignment="Right"/>
                        <Controls:NumericUpDown x:Name="customadventurecooldowntime" Minimum = "1" Maximum = "1000" Interval = "1" Grid.Column="1" Grid.Row="11" HorizontalAlignment="Left" Value="{Binding textAdventure.customadventurecooldowntime, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock  VerticalAlignment="Center"  FontSize="12" Grid.Column="0" Grid.Row="12" Text="User Join Time (seconds): " HorizontalAlignment="Right"/>
                        <Controls:NumericUpDown x:Name="customadventurejointime" Minimum = "1" Maximum = "10000" Interval = "1" Grid.Column="1" Grid.Row="12" HorizontalAlignment="Left" Value="{Binding textAdventure.customadventurejointime, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock  VerticalAlignment="Center"  FontSize="12" Grid.Column="0" Grid.Row="13" Text="Cost To Join: " HorizontalAlignment="Right"/>
                        <Controls:NumericUpDown x:Name="customadventurejoincost" Minimum = "1" Maximum = "10000" Interval = "1" Grid.Column="1" Grid.Row="13" HorizontalAlignment="Left" Value="{Binding textAdventure.customadventurejoincost, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock HorizontalAlignment="Right" FontSize="12" Grid.Row="14" Text="Game Start Message: " Grid.Column="0" />
                        <TextBox x:Name="customGameStartMessage" Controls:TextBoxHelper.ClearTextButton="True" Grid.Row="14" Grid.Column="1" FontSize="14" TextWrapping="Wrap" Text="{Binding textAdventure.customGameStartMessage, UpdateSourceTrigger=PropertyChanged}" />
                        <TextBlock HorizontalAlignment="Right" FontSize="12" Grid.Row="15" Text="Game End Message: " Grid.Column="0" />
                        <TextBox x:Name="customGameEndMessage" Controls:TextBoxHelper.ClearTextButton="True" Grid.Row="15" Grid.Column="1" FontSize="14" TextWrapping="Wrap" Text="{Binding textAdventure.customGameEndMessage, UpdateSourceTrigger=PropertyChanged}" />

                        <Button Style="{DynamicResource SquareButtonStyle}" x:Name="GO1_Copy" Content="Apply" Click="writeToConfig" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="118" Grid.RowSpan="2"/>

                    </Grid>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Raffle" FontSize="12">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="50*"/>
                        <ColumnDefinition Width="50*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock VerticalAlignment="Center" FontSize="20" FontWeight="Bold" Text="Raffle" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Center"/>
                    <TextBlock FontSize="12" Text="Command Name: " Grid.Column="0" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Right"/>
                    <TextBox TextWrapping="Wrap" Controls:TextBoxHelper.ClearTextButton="True" x:Name="giveawaycommandname"  FontSize="12" Grid.Column="1" Grid.Row="1" Controls:TextBoxHelper.Watermark="Raffle command name here (default: !raffle)" Text="{Binding giveawaycommandname, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </TabItem>

            <TabItem Header="Events" FontSize="12">
                <TabControl x:Name="eventstabholder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="LightBlue" >
                    <TabControl.Template>
                        <ControlTemplate TargetType="TabControl">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="39"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TabPanel x:Name="HeaderPanel"
                              Panel.ZIndex ="1" 
                              KeyboardNavigation.TabIndex="1"
                              Grid.Column="0"
                              Grid.Row="0"
                              IsItemsHost="true"/>
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                          ContentSource="SelectedContent" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                            </Grid>
                        </ControlTemplate>
                    </TabControl.Template>

                    <TabItem Header="User-Joins" FontSize="15">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="90*"/>
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="18*"/>
                                    <ColumnDefinition Width="85*"/>
                                </Grid.ColumnDefinitions>

                            </Grid>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20*"/>
                                    <ColumnDefinition Width="65*"/>
                                    <ColumnDefinition Width="15*"/>
                                    <ColumnDefinition Width="15*"/>
                                </Grid.ColumnDefinitions>
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Type username here" TextWrapping="Wrap" x:Name="editEventUser" Text="" Grid.Column="0" />
                                <TextBox Controls:TextBoxHelper.ClearTextButton="True" Controls:TextBoxHelper.Watermark="Event response" TextWrapping="Wrap" x:Name="editEventMessage" Text="" VerticalScrollBarVisibility="Auto" Grid.Column="1"/>
                                <Button Style="{DynamicResource SquareButtonStyle}" IsDefault="True" Content="Add/Edit" Click="addevent" Grid.Column="2" />
                                <Button Style="{DynamicResource SquareButtonStyle}" Content="Delete" Click="removeevent" Grid.Column="3" />
                            </Grid>
                            <Grid Grid.Row="2">
                                <DataGrid x:Name="eventsdatagrid" GridLinesVisibility="All" ItemsSource="{Binding events, UpdateSourceTrigger=PropertyChanged}" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" >
                                    <DataGrid.Columns >
                                        <DataGridTemplateColumn x:Name="eventUserName" Header="Joining User" Width=".18*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding Key}" ToolTipService.ToolTip="Click to edit event." MouseLeftButtonDown="editEventsButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTemplateColumn x:Name="eventMessage" Header="Response" Width=".85*">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock TextWrapping="Wrap" Text="{Binding Value}" ToolTipService.ToolTip="Click to edit event." MouseLeftButtonDown="editEventsButtonClick" />
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </Grid>
                        </Grid>
                    </TabItem>

                    <TabItem Header="Others" FontSize="15">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50*" />
                                <ColumnDefinition Width="50*" />
                            </Grid.ColumnDefinitions>

                            <TextBlock  VerticalAlignment="Center" FontSize="14" Text="Auto Shoutout on Host: " Grid.Column="0" HorizontalAlignment="Right" />
                            <CheckBox x:Name="autoShoutoutOnHost" FontSize="14" Grid.Column="1" Grid.Row="0" Checked="writeToConfig" Unchecked="writeToConfig" IsChecked="{Binding autoShoutoutOnHost, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock  VerticalAlignment="Center" FontSize="14" Text="Follower Message: "  HorizontalAlignment="Right" Grid.Row="1" Grid.Column="0" />
                            <TextBox x:Name="followerMessage" TextWrapping="Wrap" FontSize="14" Grid.Column="1" Grid.Row="1" Text="{Binding followerMessage, UpdateSourceTrigger=PropertyChanged}" />

                            <TextBlock  VerticalAlignment="Center" FontSize="14" Text="Currency Payout on Follow: " HorizontalAlignment="Right" Grid.Row="2" Grid.Column="0" />
                            <Controls:NumericUpDown x:Name="autoFollowPayout" Minimum = "0" Maximum = "10000" Interval = "1" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Left" Value="{Binding autoFollowPayout, UpdateSourceTrigger=PropertyChanged}"/>

                            <TextBlock  VerticalAlignment="Center" FontSize="14" Text="Subscriber Message: "  HorizontalAlignment="Right" Grid.Row="3" Grid.Column="0" />
                            <TextBox TextWrapping="Wrap" x:Name="subMessage" FontSize="14" Grid.Column="1" Grid.Row="3" Text="{Binding subMessage, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock  VerticalAlignment="Center" FontSize="14" Text="Resubscriber Message: "  HorizontalAlignment="Right" Grid.Row="4" Grid.Column="0" />
                            <TextBox TextWrapping="Wrap" x:Name="resubMessage" FontSize="14" Grid.Column="1" Grid.Row="4" Text="{Binding resubMessage, UpdateSourceTrigger=PropertyChanged}" />

                            <TextBlock  VerticalAlignment="Center" FontSize="14" Text="Currency Payout on Sub: " HorizontalAlignment="Right" Grid.Row="5" Grid.Column="0" />
                            <Controls:NumericUpDown x:Name="autoSubPayout" Minimum = "0" Maximum = "10000" Interval = "1" Grid.Column="1" Grid.Row="5" HorizontalAlignment="Left" Value="{Binding autoSubPayout, UpdateSourceTrigger=PropertyChanged}"/>

                            <TextBlock  VerticalAlignment="Center" FontSize="14" Text="Host Message: "  HorizontalAlignment="Right" Grid.Row="6" Grid.Column="0" />
                            <TextBox TextWrapping="Wrap" x:Name="hostMessage" FontSize="14" Grid.Column="1" Grid.Row="6" Text="{Binding hostMessage, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock  VerticalAlignment="Center" FontSize="14" Text="Host viewers required for raid: "  HorizontalAlignment="Right" Grid.Row="7" Grid.Column="0" />
                            <Controls:NumericUpDown x:Name="raidViewersRequired" Minimum = "1" Maximum = "100" Interval = "1" Grid.Column="1" Grid.Row="7" HorizontalAlignment="Left" Value="{Binding raidViewersRequired, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock  VerticalAlignment="Center" FontSize="14" Text="Raid Message: "  HorizontalAlignment="Right" Grid.Row="8" Grid.Column="0" />
                            <TextBox TextWrapping="Wrap" x:Name="raidMessage" FontSize="14" Grid.Column="1" Grid.Row="8" Text="{Binding raidMessage, UpdateSourceTrigger=PropertyChanged}" />
                            
                            <Button FontSize="12" Style="{DynamicResource SquareButtonStyle}" x:Name="apply_button" Content="Apply" Click="writeToConfig" Grid.Column="0" Grid.Row="9" Grid.ColumnSpan="4"  />



                        </Grid>
                    </TabItem>
                </TabControl>
            </TabItem>

            <TabItem Header="Rocksmith" FontSize="12">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" >
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="33*"/>
                            <ColumnDefinition Width="33*"/>
                            <ColumnDefinition Width="33*" />
                        </Grid.ColumnDefinitions>
                        <TextBlock HorizontalAlignment="Right" FontSize="12" Text="Open RockSniffer on startup: " Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="0" />
                        <CheckBox x:Name="openRockSnifferOnStartUp" FontSize="14" Grid.Column="1" Grid.Row="0" IsChecked="{Binding openRockSnifferOnStartUp, UpdateSourceTrigger=PropertyChanged}"/>
                        <Button FontSize="12" Style="{DynamicResource SquareButtonStyle}" Content="Open RockSniffer" Click="openRockSniffer" Grid.Column="2" Grid.Row="0" />

                        <Button FontSize="12" Style="{DynamicResource SquareButtonStyle}" Content="Connect With CustomsForge" Click="customsForgeWindow" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" />

                        <TextBlock HorizontalAlignment="Right" FontSize="12" Text="Open CustomsForge link on next song: " Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="3" />
                        <CheckBox x:Name="displayCFLink" FontSize="14" Grid.Column="1" Grid.Row="3" IsChecked="{Binding requestSystem.displayCFLink, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" FontSize="12" Text="Open CustomsForge link instead of Youtube link by double clicking on song in queue: " Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="4" />
                        <CheckBox x:Name="openCFLinkInsteadOfYoutube" FontSize="14" VerticalAlignment="Center" Grid.Column="1" Grid.Row="4" IsChecked="{Binding requestSystem.openCFLinkInsteadOfYoutube, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock HorizontalAlignment="Right" FontSize="12" Text="Require Dynamic Difficulty: " Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="5" />
                        <CheckBox x:Name="requireDD" FontSize="14" Grid.Column="1" Grid.Row="5" IsChecked="{Binding requestSystem.requireDD, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock HorizontalAlignment="Right" FontSize="12" Text="Check CustomsForge for requests: " Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="2" />
                        <CheckBox x:Name="checkCustomsForge" FontSize="14" Grid.Column="1" Grid.Row="2" IsChecked="{Binding requestSystem.checkCustomsForge, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock HorizontalAlignment="Right" FontSize="12" Text="Require Lead Guitar: " Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="6" />
                        <CheckBox x:Name="checkCustomsForgeLead" FontSize="14" Grid.Column="1" Grid.Row="6" IsChecked="{Binding requestSystem.checkCustomsForgeLead, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock HorizontalAlignment="Right" FontSize="12" Text="Require Rhythm Guitar: " Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="7" />
                        <CheckBox x:Name="checkCustomsForgeRhythm" FontSize="14" Grid.Column="1" Grid.Row="7" IsChecked="{Binding requestSystem.checkCustomsForgeRhythm, UpdateSourceTrigger=PropertyChanged}"/>
                        <TextBlock HorizontalAlignment="Right" FontSize="12" Text="Require Bass Guitar: " Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="8" />
                        <CheckBox x:Name="checkCustomsForgeBass" FontSize="14" Grid.Column="1" Grid.Row="8" IsChecked="{Binding requestSystem.checkCustomsForgeBass, UpdateSourceTrigger=PropertyChanged}"/>

                        <TextBlock HorizontalAlignment="Right" FontSize="12" Text="Tunings: Between E_STANDARD and " Cursor="None" VerticalAlignment="Center" Grid.Column="0" Grid.Row="9" />
                        <ComboBox x:Name="lowestTuning"  MaxDropDownHeight="200" Grid.Row="9" Grid.Column="1" SelectedIndex="{Binding requestSystem.lowestTuning, UpdateSourceTrigger=PropertyChanged}" >
                            <ComboBoxItem>All Tunings</ComboBoxItem>
                            <ComboBoxItem>E_STANDARD</ComboBoxItem>
                            <ComboBoxItem>DROP_D</ComboBoxItem>
                            <ComboBoxItem>Eb_STANDARD</ComboBoxItem>
                            <ComboBoxItem>Eb_DROP_Db</ComboBoxItem>
                            <ComboBoxItem>D_STANDARD</ComboBoxItem>
                            <ComboBoxItem>D_DROP_C</ComboBoxItem>
                            <ComboBoxItem>Cs_STANDARD</ComboBoxItem>
                            <ComboBoxItem>Cs_DROP_B</ComboBoxItem>
                            <ComboBoxItem>C_STANDARD</ComboBoxItem>
                            <ComboBoxItem>C_DROP_Bb</ComboBoxItem>
                            <ComboBoxItem>B_STANDARD</ComboBoxItem>
                            <ComboBoxItem>B_DROP_A</ComboBoxItem>
                            <ComboBoxItem>Bb_STANDARD</ComboBoxItem>
                            <ComboBoxItem>Bb_DROP_Ab</ComboBoxItem>
                            <ComboBoxItem>A_STANDARD</ComboBoxItem>
                            <ComboBoxItem>Ab_STANDARD</ComboBoxItem>
                            <ComboBoxItem>G_STANDARD</ComboBoxItem>
                            <ComboBoxItem>LOW_Gb_STANDARD</ComboBoxItem>
                            <ComboBoxItem>LOW_F_STANDARD</ComboBoxItem>
                        </ComboBox>
                        
                        <Button FontSize="12" Style="{DynamicResource SquareButtonStyle}" Content="Apply" Click="writeToConfig" Grid.Column="0" Grid.Row="10" Grid.ColumnSpan="4"  />
                        
                    </Grid>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Notes" FontSize="12">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="90*"/>
                        <RowDefinition Height="8*"/>
                    </Grid.RowDefinitions>
                    <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Grid.Row="0" >
                        <TextBox TextWrapping="Wrap" x:Name="notestextbox" FontSize="16" Text="" />
                    </ScrollViewer>
                    <Button FontSize="12" Style="{DynamicResource SquareButtonStyle}" Content="Save" Click="saveNotes" Grid.Column="0" Grid.Row="1" />
                </Grid>
            </TabItem>

            <TabItem Header="Readme" FontSize="12">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" >
                    <TextBox IsReadOnly="True" TextWrapping="Wrap" x:Name="readmetextbox" FontSize="16" Text="" />
                </ScrollViewer>
            </TabItem>


        </TabControl>
    </Grid>
</Controls:MetroWindow>